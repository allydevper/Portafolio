---
import { Image } from "astro:assets";
import {
	BigTechImages,
	NormalTechImages,
	SmallTechImages,
} from "../constants/imagesPath";
import ProjectsSection from "./ProjectsSection";
import ContactForm from "./ContactForm";
import Footer from "./Footer.astro";

const defaultImageSmall = SmallTechImages[0];
---

<style type="text/css">
	.bounce {
		animation: bounce-custom 1.3s infinite;
	}

	@keyframes bounce-custom {
		0%,
		100% {
			transform: translateY(5px);
		}

		50% {
			transform: translateY(-5px);
		}
	}

	#home {
		overflow: hidden;
	}

	#custom-back {
		position: absolute;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
		z-index: -1;
	}

	.border-svg {
		stroke: white;
		stroke-width: 2px;
		fill: none;
		stroke-linecap: round;
	}

	@keyframes movePattern {
		from {
			transform: translateY(0);
		}
		to {
			transform: translateY(95.8675px);
		}
	}

	.moving-pattern {
		animation: movePattern 8s infinite linear;
	}
</style>

<section
	id="home"
	class="min-h-screen flex items-center justify-center text-center relative"
	style="background: linear-gradient(225deg, rgba(255, 255, 255, 0.1) 10%, rgb(0 0 0 / 81%) 85%, rgb(0 0 0) 16%);"
>
	<div>
		<svg
			id="custom-back"
			xmlns="http://www.w3.org/2000/svg"
			xmlns:xlink="http://www.w3.org/1999/xlink"
			viewBox="-250 -100 900 750"
			preserveAspectRatio="xMidYMid slice"
			class="absolute opacity-10"
		>
			<defs>
				<pattern
					id="Hexagonos"
					x="0"
					y="0"
					width="55.3491"
					height="95.8675"
					patternUnits="userSpaceOnUse"
				>
					<g class="border-svg">
						<polyline points="12.6,-19.6 40.2,-3.6 67.9,-19.6"
						></polyline>
						<polyline
							points="-15.1,28.4 12.6,44.4 40.2,28.4 67.9,44.4"
						></polyline>
						<polyline
							points="-15.1,92.3 12.6,76.3 40.2,92.3 67.9,76.3"
						></polyline>
						<line x1="12.6" y1="76.3" x2="12.6" y2="44.4"></line>
						<line x1="40.2" y1="92.3" x2="40.2" y2="124.2"></line>
						<line x1="40.2" y1="-3.6" x2="40.2" y2="28.4"></line>
					</g>
				</pattern>

				<!-- Definir el rectángulo con el patrón -->
				<rect
					id="Patron"
					fill="url(#Hexagonos)"
					width="1600"
					height="1800"
					x="-400"
					y="-500"
					class="moving-pattern"></rect>
			</defs>

			<!-- Aplicar el patrón -->
			<use xlink:href="#Patron"></use>
		</svg>
	</div>
	<div class="relative z-10">
		<div
			class="w-52 h-52 rounded-full bg-white flex items-center justify-center mx-auto mb-4"
		>
			<div class="p-4 w-44 h-44 object-contain">
				<Image
					src={"/images/icon.png"}
					alt="Wilmer Alama"
					class={"rounded-lg bounce"}
					width={300}
					height={300}
					loading={"eager"}
				/>
			</div>
		</div>
		<h2 class="text-4xl md:text-6xl font-bold">
			Hola, soy Wilmer <span class="text-yellow-300">Alama</span>
		</h2>
		<p class="text-lg md:text-xl mt-4">
			Soy un desarrollador web apasionado por crear diseños modernos y
			aplicaciones diversas.
		</p>
		<div class="flex flex-col items-center mt-6">
			<div class="flex flex-row">
				<a
					href="https://github.com/allydevper"
					target="_blank"
					class="ml-4 mr-2"
					aria-label="Visitar mi perfil de GitHub"
				>
					<button
						class="px-6 py-3 bg-gray-800 text-white font-semibold rounded-full hover:bg-gray-700 transition duration-300 cursor-pointer flex items-center"
						aria-label="Botón para visitar GitHub"
					>
						<svg
							xmlns="http://www.w3.org/2000/svg"
							width="24"
							height="24"
							viewBox="0 0 24 24"
							fill="none"
							stroke="currentColor"
							stroke-width="2"
							stroke-linecap="round"
							stroke-linejoin="round"
							class="mr-2"
						>
							<path stroke="none" d="M0 0h24v24H0z" fill="none"
							></path>
							<path
								d="M9 19c-4.3 1.4 -4.3 -2.5 -6 -3m12 5v-3.5c0 -1 .1 -1.4 -.5 -2c2.8 -.3 5.5 -1.4 5.5 -6a4.6 4.6 0 0 0 -1.3 -3.2a4.2 4.2 0 0 0 -.1 -3.2s-1.1 -.3 -3.5 1.3a12.3 12.3 0 0 0 -6.2 0c-2.4 -1.6 -3.5 -1.3 -3.5 -1.3a4.2 4.2 0 0 0 -.1 3.2a4.6 4.6 0 0 0 -1.3 3.2c0 4.6 2.7 5.7 5.5 6c-.6 .6 -.6 1.2 -.5 2v3.5"
							></path>
						</svg>
						Visitar GitHub
					</button>
				</a>
				<a href="#projects">
					<button
						class="px-6 py-3 bg-yellow-300 text-black font-medium rounded-full hover:bg-white hover:text-black transition duration-300 cursor-pointer"
						>Ver mi Trabajo</button
					>
				</a>
			</div>
		</div>
	</div>
</section>

<!-- Sección Sobre Mí -->
<section id="about" class="px-8 py-12 bg-zinc-800">
	<div class="max-w-4xl mx-auto text-center">
		<h2 class="text-3xl font-bold mb-4 text-yellow-300">Sobre Mí</h2>
		<p class="text-lg">
			Soy un desarrollador web apasionado por crear aplicaciones modernas,
			funcionales y centradas en la experiencia del usuario. Desde siempre
			he dedicado mi tiempo a aprender, explorar y perfeccionar mis
			habilidades en tecnologías web, escritorio y mobile. Me encanta
			enfrentar nuevos desafíos, mantenerme actualizado con las últimas
			tendencias del sector y construir soluciones innovadoras que marquen
			la diferencia.
		</p>
	</div>
</section>

<!-- Sección de Habilidades -->
<section id="skills" class="px-4 py-12 bg-black">
	<div class="max-w-4xl mx-auto">
		<h2 class="text-3xl font-bold mb-4 text-center text-yellow-300">
			Habilidades
		</h2>
		<div class="big-skills flex flex-wrap justify-center gap-3 pb-4">
			{
				BigTechImages.map((m) => (
					<div class="w-28 h-28 sm:w-32 sm:h-32 md:w-36 md:h-36 lg:w-40 lg:h-40 rounded-full bg-gray-100 flex items-center justify-center mx-1">
						<div class="p-6 w-full h-full object-contain">
							<Image
								src={m.src}
								alt={m.alt}
								class={"rounded-lg"}
								title={m.title}
								width={300}
								height={300}
								loading={"lazy"}
							/>
						</div>
					</div>
				))
			}
		</div>
		<div class="normal-skills flex flex-wrap justify-center gap-2">
			{
				NormalTechImages.map((m, index) => (
					<div class="w-16 h-16 sm:w-20 sm:h-20 md:w-24 md:h-24 rounded-full bg-gray-100 flex items-center justify-center mx-1">
						<div class="p-2 w-full h-full object-contain">
							<Image
								src={m.src}
								alt={m.alt}
								class={"rounded-lg"}
								title={m.title}
								width={300}
								height={300}
								loading={"lazy"}
							/>
						</div>
					</div>
				))
			}
			{/* Imagen dinámica */}
			<div
				class="w-16 h-16 sm:w-20 sm:h-20 md:w-24 md:h-24 rounded-full bg-gray-100 flex items-center justify-center mx-1"
			>
				<div class="p-2 w-full h-full object-contain">
					<Image
						id="dynamic-image"
						src={defaultImageSmall.src}
						alt={defaultImageSmall.alt}
						title={defaultImageSmall.title}
						width={100}
						height={100}
					/>
				</div>
			</div>
		</div>
	</div>
</section>

<!-- Sección de Herramientas y Tecnologías -->
<section class="px-8 py-12 bg-zinc-800">
	<div class="max-w-4xl mx-auto">
		<h2 class="text-3xl font-bold mb-4 text-center text-yellow-300">
			Herramientas y Tecnologías
		</h2>
		<p class="text-lg text-center">
			Trabajo con herramientas como Visual Studio, Visual Studio Code,
			Eclipse, Git, Balsamiq Mockups y más para dar vida a las ideas.
		</p>
	</div>
</section>

<!-- Sección de Proyectos -->
<section id="projects" class="px-8 py-8 bg-black">
	<div class="max-w-4xl mx-auto">
		<h2 class="text-3xl font-bold mb-4 text-center text-yellow-300">
			Ultimos Proyectos
		</h2>
		<ProjectsSection client:load />
		<div class="mt-8 flex justify-center">
			<a href="/projects">
				<button
					type="button"
					class="px-4 py-3 bg-yellow-300 text-black font-bold rounded-full hover:bg-white hover:text-black transition duration-300 cursor-pointer"
				>
					Ver todos los proyectos
				</button>
			</a>
		</div>
	</div>
</section>

<!-- Sección de Contacto -->
<section id="contact" class="px-8 py-12 bg-zinc-800 text-center">
	<ContactForm client:load />
</section>

<!-- Sección de Pie de Página -->
<Footer />

<div id="image-data" style="display: none;">
	{JSON.stringify(SmallTechImages)}
</div>

<script type="module" is:inline>
	const smallTechImages = JSON.parse(
		document.getElementById("image-data").textContent,
	);

	function cambiarImagen() {
		const targetImage = document.getElementById("dynamic-image");

		if (smallTechImages && smallTechImages.length > 0) {
			const randomIndex = Math.floor(
				Math.random() * smallTechImages.length,
			);
			const selectedImage = smallTechImages[randomIndex];

			if (targetImage) {
				targetImage.src = selectedImage.src;
				targetImage.alt = selectedImage.alt;
				targetImage.title = selectedImage.title;
			}
		}
	}

	setInterval(cambiarImagen, 1500);
	cambiarImagen();

	document.querySelectorAll('a[href^="#"]').forEach((anchor) => {
		anchor.addEventListener("click", function (e) {
			e.preventDefault();

			document.querySelector(this.getAttribute("href")).scrollIntoView({
				behavior: "smooth",
			});
		});
	});
</script>
